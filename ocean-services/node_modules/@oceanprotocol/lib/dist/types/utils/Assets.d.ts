import { Signer } from 'ethers';
import { Aquarius } from '../services/Aquarius.js';
import { DDO } from '@oceanprotocol/ddo-js';
export declare const DEVELOPMENT_CHAIN_ID = 8996;
export declare function useOasisSDK(network: string | number): boolean;
/**
 *
 * @param name asset name
 * @param symbol asse symbol
 * @param owner owner address
 * @param assetUrl asset url, if present and confidential evm, add it to token create params
 * @param templateIDorAddress either template address or id
 * @param ddo ddo
 * @param encryptDDO encrypt or not?
 * @param providerUrl the provider URL
 * @param providerFeeToken the provider fee token
 * @param aquariusInstance aquarius, could be node instance url
 * @param allowAccessList?: string,
 * @param denyAccessList?: string
 * @returns ddo id as string
 */
export declare function createAsset(name: string, symbol: string, owner: Signer, assetUrl: any, // files object
templateIDorAddress: string | number, // If string, it's template address , otherwise, it's templateId
ddo: DDO, encryptDDO: boolean, // default is true
providerUrl: string, providerFeeToken: string, aquariusInstance: Aquarius, accessListFactory?: string, // access list factory address
allowAccessList?: string, // allow list address
denyAccessList?: string): Promise<string>;
/**
 * deploy new access list factory if needed
 * @param accessListFactory accessListFactory address
 * @param owner owner account
 * @param addressesList list of addresses to deploy
 * @returns accessListFactory address
 */
export declare function createAccessListFactory(accessListFactory: string, owner: Signer, addressesList?: string[]): Promise<any>;
