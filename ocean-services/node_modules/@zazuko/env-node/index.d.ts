import FsUtilsFactory from '@zazuko/rdf-utils-fs/Factory.js';
export { default as Environment } from '@zazuko/env/Environment.js';
export declare function create(): import("@zazuko/env").DerivedEnvironment<import("@zazuko/env").DerivedEnvironment<import("@rdfjs/environment/Environment.js").Environment<import("@rdfjs/data-model/Factory.js").default | import("@rdfjs/formats/Factory.js").FormatsFactory | import("@rdfjs/term-map/Factory.js").TermMapFactory | import("@tpluscode/rdf-ns-builders").default | import("clownface/Factory.js").default | import("@rdfjs/term-set/Factory.js").TermSetFactory | import("@rdfjs/namespace/Factory.js").NamespaceFactory | import("@rdfjs/traverser/Factory.js").TraverserFactory>, import("@rdfjs/environment/Environment.js").Environment<{
    dataset: import("@zazuko/env/lib/DatasetFactoryExt.js").FactoryMethod<import("@zazuko/env/lib/DatasetExt.js").Dataset>;
    init(this: import("@rdfjs/environment/Environment.js").Environment<import("@rdfjs/data-model/Factory.js").default | import("@rdfjs/formats/Factory.js").FormatsFactory | import("@rdfjs/term-map/Factory.js").TermMapFactory | import("@zazuko/env/lib/DatasetFactoryExt.js").DatasetFactoryExt<import("@zazuko/env/lib/DatasetExt.js").Dataset>>): void;
}>>, import("@rdfjs/environment/Environment.js").Environment<FsUtilsFactory | import("@rdfjs/fetch-lite/Factory.js").FetchFactory>>;
declare const _default: import("@zazuko/env").DerivedEnvironment<import("@zazuko/env").DerivedEnvironment<import("@rdfjs/environment/Environment.js").Environment<import("@rdfjs/data-model/Factory.js").default | import("@rdfjs/formats/Factory.js").FormatsFactory | import("@rdfjs/term-map/Factory.js").TermMapFactory | import("@tpluscode/rdf-ns-builders").default | import("clownface/Factory.js").default | import("@rdfjs/term-set/Factory.js").TermSetFactory | import("@rdfjs/namespace/Factory.js").NamespaceFactory | import("@rdfjs/traverser/Factory.js").TraverserFactory>, import("@rdfjs/environment/Environment.js").Environment<{
    dataset: import("@zazuko/env/lib/DatasetFactoryExt.js").FactoryMethod<import("@zazuko/env/lib/DatasetExt.js").Dataset>;
    init(this: import("@rdfjs/environment/Environment.js").Environment<import("@rdfjs/data-model/Factory.js").default | import("@rdfjs/formats/Factory.js").FormatsFactory | import("@rdfjs/term-map/Factory.js").TermMapFactory | import("@zazuko/env/lib/DatasetFactoryExt.js").DatasetFactoryExt<import("@zazuko/env/lib/DatasetExt.js").Dataset>>): void;
}>>, import("@rdfjs/environment/Environment.js").Environment<FsUtilsFactory | import("@rdfjs/fetch-lite/Factory.js").FetchFactory>>;
export default _default;
export type NodeEnv = ReturnType<typeof create>;
//# sourceMappingURL=index.d.ts.map